{"pageProps":{"post":{"attributes":{"title":"Setting up shop","description":"description"},"html":"<h2 id=\"getting-allure-up-and-running\">Getting Allure up and running</h2>\n<p>Allure is an open-source reporting tool that consumes automated test output and presents it to give a &quot;test suite&quot;-like overview.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"first-an-example\"><strong>First an example</strong></h4>\n<p>Let us have a look at an existing report.</p>\n<p>This one is generated on every development CI run.</p>\n<p><a href=\"https://dev.mlops.data.novonordisk.cloud/bdd/\">MLOps Allure report</a></p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"installing-allure\"><strong>Installing Allure</strong></h4>\n<p><code>Allure</code> for report generation is not currently offered through <strong><code>brew</code></strong> or <strong><code>pip</code></strong> or any other package managers, so we have to install it manually. <code>Allure-behave</code> <em>is</em> available.</p>\n<p>The same goes for installing it as part of pipeline execution.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<p>The installation consists of two parts:</p>\n<br />\n\n<ul>\n<li>allure-behave <ul>\n<li>(the formatter)</li>\n</ul>\n</li>\n<li>allure <ul>\n<li>(the report generator)</li>\n</ul>\n</li>\n</ul>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"installing-it-all-via-an-ado-script-task\"><strong>Installing it all via an ADO script task</strong></h4>\n<br />\n\n<p><code>parameters.allure_behave_version = 2.12.0</code></p>\n<p><code>parameters.allure_version = 2.20.1</code></p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\"># Install Allure and dependencies</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">script:</span> <span class=\"hljs-string\">|\n    python -m pip install allure-behave==${{ parameters.allure_behave_version }}\n    curl -o allure-${{ parameters.allure_version }}.tgz -Ls https://github.com/allure-framework/allure2/releases/download/${{ parameters.allure_version }}/allure-${{ parameters.allure_version }}.tgz   \n    sudo tar -zxvf allure-${{ parameters.allure_version }}.tgz -C /opt/   \n    sudo ln -s /opt/allure-${{ parameters.allure_version }}/bin/allure /usr/bin/allure\n    allure --version\n</span><span class=\"hljs-attr\">displayName:</span> <span class=\"hljs-string\">Install</span> <span class=\"hljs-string\">Allure</span> <span class=\"hljs-string\">and</span> <span class=\"hljs-string\">dependencies</span>\n<span class=\"hljs-attr\">workingDirectory:</span> <span class=\"hljs-string\">./</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"generate-test-results-in-the-allure-format\"><strong>Generate test results in the Allure format</strong></h4>\n<p>Before Allure can use test results to create a report, the test results need to be generated and formatted for Allure use. This is done by the allure-behave formatter.</p>\n<p>Run tests like this:</p>\n<pre><code class=\"hljs language-bash\">python -W ignore -m \n  behave \n  -f allure_behave.formatter:AllureFormatter \n  -o reports\n  &lt;path to feature files directory&gt;  \n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<p>Here is a variation where specific tags are listed:</p>\n<pre><code class=\"hljs language-bash\">python -W ignore -m \n  behave \n  --tags <span class=\"hljs-string\">&#x27;~@InProgress&#x27;</span>\n  -f allure_behave.formatter:AllureFormatter \n  -o reports\n  &lt;path to feature files directory&gt;  \n</code></pre>\n<p>Putting a <code>~</code> in front of a tag means you are omitting tests with that tag specifically.</p>\n<p>See <a href=\"https://jenisys.github.io/behave.example/tutorials/tutorial11.html\">here</a> for more examples.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"generate-the-allure-report-html\"><strong>Generate the Allure report (HTML)</strong></h4>\n<br />\n\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\"># Generate Allure BDD report</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">script:</span> <span class=\"hljs-string\">|\n    allure generate -c reports -o reports/html\n</span><span class=\"hljs-attr\">displayName:</span> <span class=\"hljs-string\">Generate</span> <span class=\"hljs-string\">Allure</span> <span class=\"hljs-string\">report</span>\n<span class=\"hljs-attr\">workingDirectory:</span> <span class=\"hljs-string\">./</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"running-it-locally-is-also-possible\"><strong>Running it locally is also possible</strong></h4>\n<pre><code class=\"hljs language-bash\">allure open reports/html\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"populating-the-trend-chart\"><strong>Populating the trend chart</strong></h4>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\">### &lt;run the tests here&gt; ###</span>\n</code></pre>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">task:</span> <span class=\"hljs-string\">AWSShellScript@1</span>\n<span class=\"hljs-attr\">displayName:</span> <span class=\"hljs-string\">Download</span> <span class=\"hljs-string\">existing</span> <span class=\"hljs-string\">Allure</span> <span class=\"hljs-string\">report</span> <span class=\"hljs-string\">history</span> <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">S3</span>\n<span class=\"hljs-attr\">inputs:</span>\n    <span class=\"hljs-attr\">awsCredentials:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">variables.aws_connection</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">regionName:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">parameters.aws_region</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">scriptType:</span> <span class=\"hljs-string\">inline</span>\n    <span class=\"hljs-attr\">inlineScript:</span> <span class=\"hljs-string\">|\n    mkdir reports/history\n    aws s3 sync s3://&lt;your-bucket&gt;/&lt;reports&gt;/history reports/history</span>\n</code></pre>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\">### &lt;generate the allure report here&gt; ###</span>\n</code></pre>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\"># Upload Allure BDD report HTML to the S3 bucket</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">task:</span> <span class=\"hljs-string\">AWSShellScript@1</span>\n<span class=\"hljs-attr\">displayName:</span> <span class=\"hljs-string\">Upload</span> <span class=\"hljs-string\">Allure</span> <span class=\"hljs-string\">report</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">S3</span>\n<span class=\"hljs-attr\">inputs:</span>\n    <span class=\"hljs-attr\">awsCredentials:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">variables.aws_connection</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">regionName:</span> <span class=\"hljs-string\">${{</span> <span class=\"hljs-string\">parameters.aws_region</span> <span class=\"hljs-string\">}}</span>\n    <span class=\"hljs-attr\">scriptType:</span> <span class=\"hljs-string\">inline</span>\n    <span class=\"hljs-attr\">inlineScript:</span> <span class=\"hljs-string\">|</span>\n    <span class=\"hljs-string\">aws</span> <span class=\"hljs-string\">s3</span> <span class=\"hljs-string\">sync</span> <span class=\"hljs-string\">reports/html</span> <span class=\"hljs-string\">s3://&lt;your-bucket&gt;/&lt;reports&gt;/</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h4 id=\"defining-custom-filters\"><strong>Defining custom filters</strong></h4>\n<p>It is possible to define custom filters for the Allure report. This is done by creating a <code>categories.json</code> file and placing it in the root of the report folder.</p>\n<p>A suggestion here is to create it elsewhere in the repo and copy it to the report folder before generating the report.</p>\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">[</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Ignored tests&quot;</span><span class=\"hljs-punctuation\">,</span> \n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;skipped&quot;</span><span class=\"hljs-punctuation\">]</span> \n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Broken tests&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;broken&quot;</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Failed tests&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;failed&quot;</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Successful tests&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;passed&quot;</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">]</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<p>More advanced examples of filtering:</p>\n<br />\n\n<pre><code class=\"hljs language-json\"><span class=\"hljs-punctuation\">[</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Skipped Tests By @Disabled - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;skipped&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*@Disabled.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Broken Tests - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;broken&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;traceRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*WebDriverException.*&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*unknown error.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Test Defects - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;broken&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;failed&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;traceRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*NoSuchElementException.*&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*no such element.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Test Defects - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;broken&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-string\">&quot;failed&quot;</span><span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;traceRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*IndexOutOfBoundsException.*&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Index.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Product Defects - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span> <span class=\"hljs-string\">&quot;failed&quot;</span> <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;traceRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*ElementShould.*&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*Element should.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;Product Defects - Definition&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;matchedStatuses&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span> <span class=\"hljs-string\">&quot;failed&quot;</span> <span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;traceRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*checkCondition.*&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;messageRegex&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.*should have.*&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">]</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<p>And to use them, they need to be copied into the test results folder, prior to generating the Allure HTML report.</p>\n<br />\n\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\"># Copy Allure categories.json definition to the reports folder before generating the HTML report</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">script:</span> <span class=\"hljs-string\">|\n    cp allure/categories.json /reports\n</span><span class=\"hljs-attr\">displayName:</span> <span class=\"hljs-string\">Set</span> <span class=\"hljs-string\">Allure</span> <span class=\"hljs-string\">report</span> <span class=\"hljs-string\">configuration</span>\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />","slug":"setting-up","title":"Setting up shop","section":"Allure Reports","icon":"info-circle","filePath":"/home/runner/work/lasselundstenjensen.github.io/lasselundstenjensen.github.io/lessons/03-allure-reports/A-setting-up.md","nextSlug":"/lessons/allure-reports/creating-pipeline-artifacts","prevSlug":"/lessons/how-we-have-done-things/case-deepchecks"}},"__N_SSG":true}